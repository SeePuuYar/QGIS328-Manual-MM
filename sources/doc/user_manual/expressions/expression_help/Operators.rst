:orphan:

.. DO NOT EDIT THIS FILE DIRECTLY. It is generated automatically by
   populate_expressions_list.py in the scripts folder.
   Changes should be made in the function help files
   in the resources/function_help/json/ folder in the
   qgis/QGIS repository.

.. _expression_function_Operators_modulo:

%
..

စားခြင်း (division) တစ်ခု၏ အကြွင်း (Remainder)။ တည်ကိန်း (dividend) ၏ လက္ခဏာသင်္ကေတ (sign) ကို ယူပါသည်။

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - a % b
   * - Argument များ
     - * **a** - တန်ဖိုး
       * **b** - တန်ဖိုး
   * - ဥပမာများ
     - * ``9 % 2`` → 1
       * ``9 % -2`` → 1
       * ``-9 % 2`` → -1
       * ``5 % NULL`` → NULL


.. end_%_section

.. _expression_function_Operators_asterisk:

\*
...

တန်ဖိုးနှစ်ခု၏ မြှောက်ခြင်း (multiplication)

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - a * b
   * - Argument များ
     - * **a** - တန်ဖိုး
       * **b** - တန်ဖိုး
   * - ဥပမာများ
     - * ``5 * 4`` → 20
       * ``5 * NULL`` → NULL


.. end_*_section

.. _expression_function_Operators_plus:

\+
...

တန်ဖိုးနှစ်ခု၏ပေါင်းခြင်း။ အကယ်၍ တန်ဖိုးတစ်ခုသည် NULL ဖြစ်ပါက ရရှိလာမည့် ရလဒ်သည် NULL ဖြစ်လိမ့်မည်ဖြစ်ပါသည်။

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - a + b
   * - Argument များ
     - * **a** - တန်ဖိုး
       * **b** - တန်ဖိုး
   * - ဥပမာများ
     - * ``5 + 4`` → 9
       * ``5 + NULL`` → NULL
       * ``'QGIS ' + 'ROCKS'`` → 'QGIS ROCKS'
       * ``to_datetime('2020-08-01 12:00:00') + '1 day 2 hours'`` → 2020-08-02T14:00:00


.. end_+_section

.. _expression_function_Operators_minus:

\-
...

တန်ဖိုးနှစ်ခု၏ခြားနားခြင်း။ အကယ်၍ တန်ဖိုးတစ်ခုသည် NULL ဖြစ်ပါက ရရှိလာမည့် ရလဒ်သည် NULL ဖြစ်လိမ့်မည်ဖြစ်ပါသည်။

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - a - b
   * - Argument များ
     - * **a** - တန်ဖိုး
       * **b** - တန်ဖိုး
   * - ဥပမာများ
     - * ``5 - 4`` → 1
       * ``5 - NULL`` → NULL
       * ``to_datetime('2012-05-05 12:00:00') - to_interval('1 day 2 hours')`` → 2012-05-04T10:00:00

       
.. end_-_section

.. _expression_function_Operators_div:

/
..

တန်ဖိုးနှစ်ခု၏ စားခြင်း

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - a / b
   * - Argument များ
     - * **a** - တန်ဖိုး
       * **b** - တန်ဖိုး
   * - ဥပမာများ
     - * ``5 / 4`` → 1.25
       * ``5 / NULL`` → NULL


.. end_/_section

.. _expression_function_Operators_floordiv:

//
...

တန်ဖိုးနှစ်ခု၏ Floor division (Floor division ဆိုသည်မှာ စားလဒ်ကို အနီးစပ်ဆုံးယူခြင်းဖြစ်သည်။ ဥပမာ 10/4=2.5 <—-normal division 10//4=2 <—-floor division)

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - a // b
   * - Argument များ
     - * **a** - တန်ဖိုး
       * **b** - တန်ဖိုး
   * - ဥပမာများ
     - * ``9 // 2`` → 4


.. end_//_section

.. _expression_function_Operators_lt:

<
..

တန်ဖိုး နှစ်ခုကို နှိုင်းယှဉ်ပြီး အကယ်၍ ဘယ်ဘက်တန်ဖိုး (left value) သည် ညာဘက်တန်ဖိုးအောက်ငယ်ပါက 1 အဖြစ် သုံးသပ်မည်ဖြစ်သည်။

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - a < b
   * - Argument များ
     - * **a** - တန်ဖိုး
       * **b** - တန်ဖိုး
   * - ဥပမာများ
     - * ``5 < 4`` → FALSE
       * ``5 < 5`` → FALSE
       * ``4 < 5`` → TRUE


.. end_<_section

.. _expression_function_Operators_le:

<=
...

တန်ဖိုး နှစ်ခုကို နှိုင်းယှဉ်ပြီး အကယ်၍ ဘယ်ဘက်တန်ဖိုး (left value) သည် ညာဘက်တန်ဖိုးနှင့်ညီသည် သို့မဟုတ် ညာဘက်တန်ဖိုးအောက်ငယ်ပါက 1 အဖြစ် သုံးသပ်မည်ဖြစ်သည်။

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - a <= b
   * - Argument များ
     - * **a** - တန်ဖိုး
       * **b** - တန်ဖိုး
   * - ဥပမာများ
     - * ``5 <= 4`` → FALSE
       * ``5 <= 5`` → TRUE
       * ``4 <= 5`` → TRUE

.. end_<=_section

.. _expression_function_Operators_ne:

<>
...

တန်ဖိုးနှစ်ခုကို နှိုင်းယှဉ်ပြီး အကယ်၍ ၎င်းတို့သည် ညီမျှခြင်းမရှိပါက 1 အဖြစ် သုံးသပ်မည်ဖြစ်သည်။

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - a <> b
   * - Argument များ
     - * **a** - တန်ဖိုး
       * **b** - တန်ဖိုး
   * - ဥပမာများ
     - * ``5 <> 4`` → TRUE
       * ``4 <> 4`` → FALSE
       * ``5 <> NULL`` → NULL
       * ``NULL <> NULL`` → NULL


.. end_<>_section

.. _expression_function_Operators_eq:

=
..

တန်ဖိုးနှစ်ခုကို နှိုင်းယှဉ်ပြီး အကယ်၍ ၎င်းတို့သည် ညီမျှပါက 1 အဖြစ် သုံးသပ်မည်ဖြစ်သည်။

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - a = b
   * - Argument များ
     - * **a** - တန်ဖိုး
       * **b** - တန်ဖိုး
   * - ဥပမာများ
     - * ``5 = 4`` → FALSE
       * ``4 = 4`` → TRUE
       * ``5 = NULL`` → NULL
       * ``NULL = NULL`` → NULL


.. end_=_section

.. _expression_function_Operators_gt:

>
..

တန်ဖိုး နှစ်ခုကို နှိုင်းယှဉ်ပြီး အကယ်၍ ဘယ်ဘက်တန်ဖိုး (left value) သည် ညာဘက်တန်ဖိုးထက်ကြီးပါက 1 အဖြစ် သုံးသပ်မည်ဖြစ်သည်။

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - a > b
   * - Argument များ
     - * **a** - တန်ဖိုး
       * **b** - တန်ဖိုး
   * - ဥပမာများ
     - * ``5 > 4`` → TRUE
       * ``5 > 5`` → FALSE
       * ``4 > 5`` → FALSE


.. end_>_section

.. _expression_function_Operators_ge:

>=
...

တန်ဖိုး နှစ်ခုကို နှိုင်းယှဉ်ပြီး အကယ်၍ ဘယ်ဘက်တန်ဖိုး (left value) သည် ညာဘက်တန်ဖိုးနှင့်ညီသည် သို့မဟုတ် ညာဘက်တန်ဖိုးထက်ကြီးပါက 1 အဖြစ် သုံးသပ်မည်ဖြစ်သည်။

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - a >= b
   * - Argument များ
     - * **a** - တန်ဖိုး
       * **b** - တန်ဖိုး
   * - ဥပမာများ
     - * ``5 <= 4`` → FALSE
       * ``5 <= 5`` → TRUE
       * ``4 <= 5`` → TRUE


.. end_>=_section

.. _expression_function_Operators_AND:

AND
....

အခြေအနေ (conditions) a နှင့် b များသည် true (မှန်ကန်မှုရှိပါက) ဖြစ်ပါက TRUE ကို ပြန်ထုတ်ပေးပါသည်။

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - a AND b
   * - Argument များ
     - * **a** - condition(အခြေအနေ)
       * **b** - condition(အခြေအနေ)
   * - ဥပမာများ     
     - * ``TRUE AND TRUE`` → TRUE
       * ``TRUE AND FALSE`` → FALSE
       * ``4 = 2+2 AND 1 = 1`` → TRUE
       * ``4 = 2+2 AND 1 = 2`` → FALSE


.. end_AND_section

.. _expression_function_Operators_BETWEEN:

BETWEEN
........

အကယ်၍ တန်ဖိုးသည် သတ်မှတ်ထားသည့် အပိုင်းအခြားပမာဏ (range) အတွင်းတွင်ရှိပါက TRUE ကို ပြန်ထုတ်ပေးပါသည်။ အပိုင်းအခြားပမာဏသည် အစနှင့်အဆုံးသတ် (bounds) များပါ အပါအဝင်ဖြစ်ပါသည်။ Exclusion (ပါဝင်မှုမရှိခြင်း) အတွက် စမ်းသပ်ရန် NOT BETWEEN ကို အသုံးပြုနိုင်ပါသည်။

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - value BETWEEN lower_bound AND higher_bound
   * - Argument များ
     - * **value** - အပိုင်းအခြားပမာဏ (range) တစ်ခုနှင့် နှိုင်းယှဉ်ရန် တန်ဖိုး။ ၎င်းသည် string တစ်ခု၊ ဂဏန်းတစ်ခု သို့မဟုတ် ရက်စွဲတစ်ခု ဖြစ်နိုင်ပါသည်။
       * **lower_bound AND higher_bound** - range bounds (အပိုင်းအခြားပမာဏ နယ်နိမိတ်)
   * - ဥပမာများ
     - * ``'B' BETWEEN 'A' AND 'C'`` → TRUE
       * ``2 BETWEEN 1 AND 3`` → TRUE
       * ``2 BETWEEN 2 AND 3`` → TRUE
       * ``'B' BETWEEN 'a' AND 'c'`` → FALSE
       * ``lower('B') BETWEEN 'a' AND 'b'`` → TRUE

.. note:: *value BETWEEN lower_bound AND higher_bound* သည် "*value >= lower_bound AND value <= higher_bound*" နှင့်အတူတူဖြစ်ပါသည်။


.. end_BETWEEN_section

.. _expression_function_Operators_ILIKE:

ILIKE
......

အကယ်၍ ပထမဆုံးသတ်မှတ်ချက် (first parameter) သည် ပံ့ပိုးထားသည့် ပုံစံ (pattern) နှင့် case-insensitive (စာလုံးအကြီးအသေးကိုဂရုမပြုပဲ) ကိုက်ညီပါက TRUE ကို ပြန်ထုတ်ပေးပါသည်။ Case-sensitive (စာလုံးအကြီးအသေးကို ဂရုပြုသော) ဖြစ်စွာ ကိုက်ညီလိုပါက ILIKE အစား ကို LIKE အသုံးပြုနိုင်ပါသည်။ ကိန်းဂဏန်းများနှင့်လည်း လုပ်ဆောင်နိုင်ပါသည်။


.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - string/number ILIKE pattern
   * - Argument များ
     - * **string/number** - ရှာဖွေမှုပြုလုပ်ရန် string
       * **pattern** - ရှာဖွေရန် ပုံစံ။ '%' ကို  wildcard တစ်ခုအဖြစ် ၊ '_' ကို single char အဖြစ် နှင့် '\\\\' ကို special character များကို ရှောင်ရှားရန် အသုံးပြုနိုင်ပါသည်။
   * - ဥပမာများ
     - * ``'A' ILIKE 'A'`` → TRUE
       * ``'A' ILIKE 'a'`` → TRUE
       * ``'A' ILIKE 'B'`` → FALSE
       * ``'ABC' ILIKE 'b'`` → FALSE
       * ``'ABC' ILIKE 'B'`` → FALSE
       * ``'ABC' ILIKE '_b_'`` → TRUE
       * ``'ABC' ILIKE '_B_'`` → TRUE
       * ``'ABCD' ILIKE '_b_'`` → FALSE
       * ``'ABCD' ILIKE '_B_'`` → FALSE
       * ``'ABCD' ILIKE '_b%'`` → TRUE
       * ``'ABCD' ILIKE '_B%'`` → TRUE
       * ``'ABCD' ILIKE '%b%'`` → TRUE
       * ``'ABCD' ILIKE '%B%'`` → TRUE
       * ``'ABCD%' ILIKE 'abcd\\%'`` → TRUE
       * ``'ABCD' ILIKE '%B\\%'`` → FALSE


.. end_ILIKE_section

.. _expression_function_Operators_IN:

IN
...

အကယ်၍ တန်ဖိုးကို တန်ဖိုးများစာရင်းအတွင်းတွင် တွေ့ရှိပါက TRUE ကို ပြန်ထုတ်ပေးပါသည်။


.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - a IN b
   * - Argument များ
     - * **a** - တန်ဖိုး
       * **b** - တန်ဖိုးများစာရင်း
   * - ဥပမာများ
     - * ``'A' IN ('A','B')`` → TRUE
       * ``'A' IN ('C','B')`` → FALSE


.. end_IN_section

.. _expression_function_Operators_IS:

IS
...

အကယ်၍ a သည် b နှင့် တူညီပါက TRUE ကို ပြန်ထုတ်ပေးပါသည်။

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - a IS b
   * - Argument များ
     - * **a** - မည်သည့် တန်ဖိုးမဆို
       * **b** - မည်သည့် တန်ဖိုးမဆို
   * - ဥပမာများ
     - * ``'A' IS 'A'`` → TRUE
       * ``'A' IS 'a'`` → FALSE
       * ``4 IS 4`` → TRUE
       * ``4 IS 2+2`` → TRUE
       * ``4 IS 2`` → FALSE
       * ``@geometry IS NULL`` → 0, if your geometry is not NULL


.. end_IS_section

.. _expression_function_Operators_IS_NOT:

IS NOT
.......

အကယ်၍ a သည် b နှင့် မတူညီပါက TRUE ကို ပြန်ထုတ်ပေးပါသည်။

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - a IS NOT b
   * - Argument များ
     - * **a** - တန်ဖိုး
       * **b** - တန်ဖိုး
   * - ဥပမာများ
     - * ``'a' IS NOT 'b'`` → TRUE
       * ``'a' IS NOT 'a'`` → FALSE
       * ``4 IS NOT 2+2`` → FALSE


.. end_IS_NOT_section

.. _expression_function_Operators_LIKE:

LIKE
.....

အကယ်၍ ပထမဆုံးသတ်မှတ်ချက် (first parameter) သည် ပံ့ပိုးထားသည့် ပုံစံ (pattern) နှင့်ကိုက်ညီပါက TRUE ကို ပြန်ထုတ်ပေးပါသည်။ ကိန်းဂဏန်းများနှင့်လည်း လုပ်ဆောင်နိုင်ပါသည်။ 


.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - string/number LIKE pattern
   * - Argument များ
     - * **string/number** - တန်ဖိုး
       * **pattern** - တန်ဖိုးများကို နှိုင်းယှဉ်ရန် ပုံစံ။ '%' ကို  wildcard တစ်ခုအဖြစ်၊ '_' ကို single char အဖြစ်နှင့် '\\\\' ကို special character များကို ရှောင်ရှားရန် အသုံးပြုနိုင်ပါသည်။
   * - ဥပမာများ
     - * ``'A' LIKE 'A'`` → TRUE
       * ``'A' LIKE 'a'`` → FALSE
       * ``'A' LIKE 'B'`` → FALSE
       * ``'ABC' LIKE 'B'`` → FALSE
       * ``'ABC' LIKE '_B_'`` → TRUE
       * ``'ABCD' LIKE '_B_'`` → FALSE
       * ``'ABCD' LIKE '_B%'`` → TRUE
       * ``'ABCD' LIKE '%B%'`` → TRUE
       * ``'1%' LIKE '1\\%'`` → TRUE
       * ``'1_' LIKE '1\\%'`` → FALSE


.. end_LIKE_section

.. _expression_function_Operators_NOT:

NOT
....

အခြေအနေ (condition) တစ်ခုကို အချည်းအနှီး (Negates) ဖြစ်စေသည်။

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - NOT a
   * - Argument များ
     - * **a** - အခြေအနေ
   * - ဥပမာများ
     - * ``NOT 1`` → FALSE
       * ``NOT 0`` → TRUE


.. end_NOT_section

.. _expression_function_Operators_NOT_BETWEEN:

NOT BETWEEN
............

အကယ်၍ တန်ဖိုးသည့် သတ်မှတ်ထားသည့် အပိုင်းအခြားပမာဏ (range) အတွင်းတွင် မရှိပါက TRUE ကို ပြန်ထုတ်ပေးပါသည်။ အပိုင်းအခြားပမာဏသည် အစနှင့်အဆုံးသတ် (bounds) များပါ အပါအဝင်ဖြစ်ပါသည်။ 

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - value NOT BETWEEN lower_bound AND higher_bound
   * - Argument များ
     - * **value** - အပိုင်းအခြားပမာဏ (range) တစ်ခုနှင့် နှိုင်းယှဉ်ရန် တန်ဖိုး။ ၎င်းသည် string တစ်ခု၊ ဂဏန်းတစ်ခု သို့မဟုတ် ရက်စွဲတစ်ခု ဖြစ်နိုင်ပါသည်။
       * **lower_bound AND higher_bound** - range bounds (အပိုင်းအခြားပမာဏ နယ်နိမိတ်)
   * - ဥပမာများ
     - * ``'B' NOT BETWEEN 'A' AND 'C'`` → FALSE
       * ``1.0 NOT BETWEEN 1.1 AND 1.2`` → TRUE
       * ``2 NOT BETWEEN 2 AND 3`` → FALSE
       * ``'B' NOT BETWEEN 'a' AND 'c'`` → TRUE
       * ``lower('B') NOT BETWEEN 'a' AND 'b'`` → FALSE

.. note:: *value NOT BETWEEN lower_bound AND higher_bound* သည် "*value < lower_bound OR value > higher_bound*" နှင့်အတူတူဖြစ်ပါသည်။


.. end_NOT_BETWEEN_section

.. _expression_function_Operators_OR:

OR
...

အခြေအနေ (condition) a သို့မဟုတ် b သည် true ဖြစ်သောအခါတွင် TRUE ကို ပြန်ထုတ်ပေးပါသည်။

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - a OR b
   * - Argument များ
     - * **a** - အခြေအနေ
       * **b** - အခြေအနေ
   * - ဥပမာများ
     - * ``4 = 2+2 OR 1 = 1`` → TRUE
       * ``4 = 2+2 OR 1 = 2`` → TRUE
       * ``4 = 2   OR 1 = 2`` → FALSE

.. end_OR_section

.. _expression_function_Operators_index:

[]
...

Index (အညွှန်းကိန်း) operator ။ Array တစ်ခု သို့မဟုတ် map တန်ဖိုးတစ်ခုမှ element တစ်ခုကို ပြန်ထုတ်ပေးပါသည်။

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - [index]
   * - Argument များ
     - * **index** - array index (အညွှန်း) သို့မဟုတ် map key တန်ဖိုး 
   * - ဥပမာများ
     - * ``array(1,2,3)[0]`` → 1
       * ``array(1,2,3)[2]`` → 3
       * ``array(1,2,3)[-1]`` → 3
       * ``map('a',1,'b',2)['a']`` → 1
       * ``map('a',1,'b',2)['b']`` → 2


.. end_[]_section

.. _expression_function_Operators_exp:

^
..

တန်ဖိုးနှစ်ခု၏ ပါဝါ (Power)။

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - a ^ b
   * - Argument များ
     - * **a** - တန်ဖိုး
       * **b** - တန်ဖိုး
   * - ဥပမာများ
     - * ``5 ^ 4`` → 625
       * ``5 ^ NULL`` → NULL


.. end_^_section

.. _expression_function_Operators_concat:

\||
....

တန်ဖိုး နှစ်ခုကို string တစ်ခုအဖြစ်သို့ ချိတ်ဆက်ပေးပါသည်။


အကယ်၍ တန်ဖိုးများထဲမှ တစ်ခုသည် NULL ဖြစ်ပါက ရလဒ်သည် NULL ဖြစ်လိမ့်မည်ဖြစ်ပါသည်။ မတူညီသည့် လုပ်ဆောင်ချက်များ အတွက် CONCAT function ကို ကြည့်ပါ။


.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - a || b
   * - Argument များ
     - * **a** - တန်ဖိုး
       * **b** - တန်ဖိုး
   * - ဥပမာများ
     - * ``'Here' || ' and ' || 'there'`` → 'Here and there'
       * ``'Nothing' || NULL`` → NULL
       * ``'Dia: ' || "Diameter"`` → 'Dia: 25'
       * ``1 || 2`` → '12'


.. end_||_section

.. _expression_function_Operators_regex:

~
..

String တန်ဖိုးတစ်ခု အပေါ်တွင် regular expression ကိုက်ညီမှုတစ်ခုကို ဆောင်ရွက်ပေးပါသည်။ Backslash characters (\) သည် နှစ်ချက်ဖြစ်ရမည်ဖြစ်သည် (ဥပမာအားဖြင့်- white space character တစ်ခုနှင့် ကိုက်ညီရန် "\\\\s")။


.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - string ~ regex
   * - Argument များ
     - * **string** - string တန်ဖိုးတစ်ခု
       * **regex** - regular expression တစ်ခု။ Slash (\) များသည် escape ဖြစ်ရမည်ဖြစ်သည်၊ ဥပမာ \\\\d
   * - ဥပမာများ
     - * ``'hello' ~ 'll'`` → TRUE
       * ``'hello' ~ '^ll'`` → FALSE
       * ``'hello' ~ 'llo$'`` → TRUE
       * ``'abc123' ~ '\\d+'`` → TRUE


.. end_~_section

