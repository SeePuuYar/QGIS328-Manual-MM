:orphan:

.. DO NOT EDIT THIS FILE DIRECTLY. It is generated automatically by
   populate_expressions_list.py in the scripts folder.
   Changes should be made in the function help files
   in the resources/function_help/json/ folder in the
   qgis/QGIS repository.

.. _expression_function_Conditionals_CASE:

CASE
.....

အခြေအနေများစွာ (series of condition) ကို အကဲဖြတ်ရန် CASE ကို အသုံးပြုပြီး ပထမဆုံး ကိုက်ညီသည့် အခြေအနေ(condition) အတွက် ရလာဒ်တစ်ခုကို ပြန်ထုတ်ပေးပါသည်။ အခြေအနေများကို အစဉ်လိုက်အားဖြင့် (sequentially) အကဲဖြတ်မည်ဖြစ်ပြီး အကယ်၍ အခြေအနေတစ်ခုသည် မှန်ကန်မှု (true) ရှိပါက အကဲဖြတ်ခြင်းသည် ရပ်သွားမည်ဖြစ်ပြီး သက်ဆိုင်ရာ ရလာဒ်ကို ပြန်ထုတ်ပေးမည်ဖြစ်ပါသည်။ အကယ်၍ မည်သည့် အခြေအနေများမဆိုသည် မှန်ကန်မှု (true) မရှိပါက ELSE clause ထဲရှိ တန်ဖိုးကို ပြန်ထုတ်ပေးမည်ဖြစ်ပါသည်။ ထို့အပြင် ELSE clause ကို သတ်မှတ်ထားခြင်းမရှိပဲ မည်သည့် အခြေအနေများမဆိုသည် ကိုက်ညီခြင်း မရှိပါက NULL ကို ပြန်ထုတ်ပေးမည်ဖြစ်ပါသည်။ 


CASE

WHEN *condition* THEN *result*

[ …n ]

[ ELSE *result* ]

END

[ ] သည် optional (မဖြစ်မနေလုပ်ဆောင်ရန်မလိုသော) အစိတ်အပိုင်းများဖြစ်ပါသည်



.. list-table::
   :widths: 15 85

   * - Argument များ
     - * **WHEN condition** - အကဲဖြတ်ရန် အခြေအနေဆိုင်ရာဖော်ပြချက် (condition expression) တစ်ခု
       * **THEN result** - အကယ်၍ *condition (အခြေအနေ)* သည် True (မှန်ကန်မှု) ဟု အကဲဖြတ်ပါက *result(ရလာဒ်)* ကို အကဲဖြတ်ပြီး ပြန်ထုတ်ပေးမည်ဖြစ်ပါသည်။
       * **ELSE result** - အကယ်၍ အထက်ဖော်ပြပါ မည်သည့် အခြေအနေများမဆိုသည် True (မှန်ကန်မှု) ဟု အကဲဖြတ်ခြင်းမခံရပါက *result(ရလာဒ်)* ကို အကဲဖြတ်ပြီး ပြန်ထုတ်ပေးမည်ဖြစ်ပါသည်။
   * - ဥပမာများ
     - * ``CASE WHEN "name" IS NULL THEN 'None' END`` → အကယ်၍ "name" field သည် NULL ဖြစ်ပါက 'None' ဆိုသည့် string ကို ပြန်ထုတ်ပေးမည်ဖြစ်သည်။
       * ``CASE WHEN $area > 10000 THEN 'Big property' WHEN $area > 5000 THEN 'Medium property' ELSE 'Small property' END`` → အကယ်၍ ဧရိယာသည် 10000 ထက်ကြီးပါက 'Big property' ဆိုသည့် string ကို ပြန်ထုတ်ပေးမည်ဖြစ်ပါသည်။ အကယ်၍ ဧရိယာသည် 5000 နှင့် 10000 ကြားဖြစ်ပါက 'Medium property' ဆိုသည့် string ကို ပြန်ထုတ်ပေးမည်ဖြစ်ပြီး အခြားသောဧရိယာများအတွက်မူ 'Small property' ဆိုသည့် string ကို ပြန်ထုတ်ပေးမည်ဖြစ်ပါသည်။


.. end_CASE_section

.. _expression_function_Conditionals_coalesce:

coalesce
.........

Expression စာရင်းထဲမှ ပထမဆုံး NULL မဟုတ်သည့် တန်ဖိုး (non-NULL value) ကို ပြန်ထုတ်ပေးပါသည်။ 

ဤ function သည် Argument များ၏ မည်သည့် ကိန်းဂဏန်းကိုမဆို ရယူနိုင်ပါသည်။

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - coalesce(expression1, expression2, ...)
   * - Argument များ
     - * **expression** - အမျိုးအစားနှင့်မသက်ဆိုင်ဘဲ ကျိုးကြောင်းဆီလျော်သည့် မည်သည့် expression သို့မဟုတ် တန်ဖိုးမဆို
   * - ဥပမာများ
     - * ``coalesce(NULL, 2)`` → 2
       * ``coalesce(NULL, 2, 3)`` → 2
       * ``coalesce(7, NULL, 3*2)`` → 7
       * ``coalesce("fieldA", "fallbackField", 'ERROR')`` → non-NULL ဖြစ်လျှင် fieldA ၏ တန်ဖိုး ထိုသို့မဟုတ်ပါက "fallbackField" ၏ တန်ဖိုး သို့မဟုတ် အကယ်၍ နှစ်ခုလုံးသည် NULL ဖြစ်ပါက 'ERROR' ဆိုသည့် string


.. end_coalesce_section

.. _expression_function_Conditionals_if:

if
...

အခြေအနေတစ်ခုကို စမ်းသပ်ပြီး အခြေအနေဆိုင်ရာစစ်ဆေးမှုများ (conditional check) အပေါ်မူတည်ပြီး မတူကွဲပြားသည့် ရလာဒ်ကို ပြန်ထုတ်ပေးပါသည်။

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - if(condition, result_when_true, result_when_false)
   * - Argument များ
     - * **condition** - စစ်ဆေးမှုများ ပြုလုပ်သင့်သည့် အခြေအနေ
       * **result_when_true** - အခြေအနေသည် true (မှန်ကန်မှု) ဖြစ်သည့်အခါတွင် သို့မဟုတ် အခြားသောတန်ဖိုးသည် false (မှန်ကန်မှုမရှိ) ဟု မပြောင်းလဲသည့်အခါတွင် ပြန်လည်ရရှိလာမည့် ရလာဒ်
       * **result_when_false** - အခြေအနေသည် false (မှန်ကန်မှုမရှိ) ဖြစ်သည့်အခါတွင် သို့မဟုတ် အခြားသောတန်ဖိုးသည် 0 သို့မဟုတ် '' ကဲ့သို့သော false (မှန်ကန်မှုမရှိ) အဖြစ်သို့ ပြောင်းလဲသည့်အခါတွင် ပြန်လည်ရရှိလာမည့် ရလာဒ်။ NULL ကိုလည်း false (မှန်ကန်မှုမရှိ) အဖြစ်သို့ ပြောင်းလဲမည်ဖြစ်ပါသည်။ 
   * - ဥပမာများ
     - * ``if( 1+1=2, 'Yes', 'No' )`` → 'Yes'
       * ``if( 1+1=3, 'Yes', 'No' )`` → 'No'
       * ``if( 5 > 3, 1, 0)`` → 1
       * ``if( '', 'It is true (not empty)', 'It is false (empty)' )`` → 'It is false (empty)'
       * ``if( ' ', 'It is true (not empty)', 'It is false (empty)' )`` → 'It is true (not empty)' 
       * ``if( 0, 'One', 'Zero' )`` → 'Zero'
       * ``if( 10, 'One', 'Zero' )`` → 'One'


.. end_if_section

.. _expression_function_Conditionals_nullif:

nullif
.......

အကယ်၍ value1 သည် value2 တူညီပါက NULL တန်ဖိုးတစ်ခုကို ပြန်ထုတ်ပေးမည်ဖြစ်ပါသည်။ ထိုသို့မဟုတ်ပါက value1 ကို ပြန်ထုတ်ပေးမည်ဖြစ်ပါသည်။ ၎င်းကို တန်ဖိုးများအား အခြေအနေအရ NULL ဖြင့် အစားထိုးရန် အသုံးပြုနိုင်ပါသည်။

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - nullif(value1, value2)
   * - Argument များ
     - * **value1** - အသုံးပြုသင့်သော သို့မဟုတ် NULL ဖြင့် အစားထိုးသင့်သည့် တန်ဖိုး။
       * **value2** - NULL substitution (အစားထိုးမှု) ကို စတင်ဆောင်ရွက်ပေးမည့် ထိန်းချုပ်တန်ဖိုး(control value)
   * - ဥပမာများ
     - * ``nullif('(none)', '(none)')`` → NULL
       * ``nullif('text', '(none)')`` → 'text'
       * ``nullif("name", '')`` → အကယ်၍ name သည် empty string (ဗလာစာသား) (သို့မဟုတ် NULL ဖြစ်ပြီးသား) တစ်ခုဖြစ်ပါက NULL ပြန်ထုတ်ပေးပါမည်။ အခြားမည်သည့်အတွက်မဆိုဖြစ်လျှင် name ကိုပြန်ထုတ်ပေးပါမည်။


.. end_nullif_section

.. _expression_function_Conditionals_regexp_match:

regexp_match
.............

Unicode string (ယူနီကုဒ်စာသား) တစ်ခုအတွင်းရှိ ပုံမှန် (regular) expression တစ်ခုနှင့်ကိုက်ညီမှုရှိသော ပထမဆုံးကိုက်ညီမှုရှိသည့်တည်နေရာ (first matching position) ကို ပြန်ထုတ်ပေးမည်ဖြစ်ပြီး သို့မဟုတ် substring ကို မတွေ့ရှိပါက 0 ကို ပြန်ထုတ်ပေးမည်ဖြစ်ပါသည်။ 


.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - regexp_match(input_string, regex)
   * - Argument များ
     - * **input_string** - ပုံမှန် expression တစ်ခုအတိုင်း စမ်းသပ်မည့် string
       * **regex** - စမ်းသပ်ရန် regular expression။ Backslash သင်္ကေတ (\) များသည် double escaped ဖြစ်ရမည်ဖြစ်ပါသည် (ဥပမာ- အဖြူရောင် space character တစ်ခုနှင့်ကိုက်ညီစေရန် "\\\\s" သို့မဟုတ် စာလုံး boundary တစ်ခုနှင့်ကိုက်ညီစေရန် "\\\\b")
   * - ဥပမာများ
     - * ``regexp_match('QGIS ROCKS','\\sROCKS')`` → 5
       * ``regexp_match('Budač','udač\\b')`` → 2

.. end_regexp_match_section

.. _expression_function_Conditionals_try:

try
....

Expression တစ်ခုကို စမ်းသပ်ပြီး အကယ်၍ error-free (အမှားကင်းခြင်း) ဖြစ်ပါက ၎င်း၏တန်ဖိုးကို ပြန်ထုတ်ပေးပါသည်။ အကယ်၍ expression သည် error တစ်ခုကို ထုတ်ပေးလျှင် ပံ့ပိုးပေးထားသော အခြားသောတန်ဖိုး (alternative value) တစ်ခုကို ပြန်ထုတ်ပေးမည်ဖြစ်ပြီး ထိုသို့မဟုတ်ပါက function သည် NULL ကို ပြန်ထုတ်ပေးမည်ဖြစ်ပါသည်။

.. list-table::
   :widths: 15 85

   * - Syntax (ဝါကျဖွဲ့ပုံ)
     - try(expression, [alternative])

       [] သည် optional (မဖြစ်မနေလုပ်ဆောင်ရန်မလိုသော) argument များဖြစ်ပါသည်
   * - Argument များ
     - * **expression** - လုပ်ဆောင် (run) သင့်သည့် expression
       * **alternative** - အကယ်၍ expression သည် error တစ်ခုကို ရရှိပါက ပြန်လည်ရရှိလာမည့် ရလဒ်
   * - ဥပမာများ
     - * ``try( to_int( '1' ), 0 )`` → 1
       * ``try( to_int( 'a' ), 0 )`` → 0
       * ``try( to_date( 'invalid_date' ) )`` → NULL


.. end_try_section

